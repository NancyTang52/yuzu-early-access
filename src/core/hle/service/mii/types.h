// Copyright 2020 yuzu emulator team
// Licensed under GPLv2 or any later version
// Refer to the license.txt file included.

#pragma once

#include "common/common_funcs.h"
#include "common/common_types.h"

namespace Service::Mii {

enum class Age : u32 {
    Young,
    Normal,
    Old,
    All,
};

enum class BeardType : u32 {
    None,
    Goatee,
    GoateeLong,
    LionsManeLong,
    LionsMane,
    Full,
};

enum class BeardAndMustacheFlag : u32 { Beard = 1, Mustache, All = Beard | Mustache };
DECLARE_ENUM_FLAG_OPERATORS(BeardAndMustacheFlag);

enum class EyebrowType : u32 {
    FlatAngledLarge,
    LowArchRoundedThin,
    SoftAngledLarge,
    MediumArchRoundedThin,
    RoundedMedium,
    LowArchMedium,
    RoundedThin,
    UpThin,
    MediumArchRoundedMedium,
    RoundedLarge,
    UpLarge,
    FlatAngledLargeInverted,
    MediumArchFlat,
    AngledThin,
    HorizontalLarge,
    HighArchFlat,
    Flat,
    MediumArchLarge,
    LowArchThin,
    RoundedThinInverted,
    HighArchLarge,
    Hairy,
    Dotted,
    None,
};

enum class FacelineColor : u32 {
    Beige,
    WarmBeige,
    Natural,
    Honey,
    Chestnut,
    Porcelain,
    Ivory,
    WarmIvory,
    Almond,
    Espresso,
};

enum class FacelineMakeup : u32 {
    None,
    CheekPorcelain,
    CheekNatural,
    EyeShadowBlue,
    CheekBlushPorcelain,
    CheekBlushNatural,
    CheekPorcelainEyeShadowBlue,
    CheekPorcelainEyeShadowNatural,
    CheekBlushPorcelainEyeShadowEspresso,
    Freckles,
    LionsManeBeard,
    StubbleBeard,
};

enum class FacelineType : u32 {
    Sharp,
    Rounded,
    SharpRounded,
    SharpRoundedSmall,
    Large,
    LargeRounded,
    SharpSmall,
    Flat,
    Bump,
    Angular,
    FlatRounded,
    AngularSmall,
};

enum class FacelineWrinkle : u32 {
    None,
    TearTroughs,
    FacialPain,
    Cheeks,
    Folds,
    UnderTheEyes,
    SplitChin,
    Chin,
    BrowDroop,
    MouthFrown,
    CrowsFeet,
    FoldsCrowsFrown,
};

enum class FontRegion : u32 {
    Standard,
    China,
    Korea,
    Taiwan,
};

enum class Gender : u32 {
    Male,
    Female,
    All,
    Maximum = Female,
};

enum class GlassesType : u32 {
    None,
    Oval,
    Wayfarer,
    Rectangle,
    TopRimless,
    Rounded,
    Oversized,
    CatEye,
    Square,
    BottomRimless,
    SemiOpaqueRounded,
    SemiOpaqueCatEye,
    SemiOpaqueOval,
    SemiOpaqueRectangle,
    SemiOpaqueAviator,
    OpaqueRounded,
    OpaqueCatEye,
    OpaqueOval,
    OpaqueRectangle,
    OpaqueAviator,
    Maximum = OpaqueAviator,
};

enum class HairFlip : u32 {
    Left,
    Right,
    Maximum = Right,
};

enum class HairType : u32 {
    NormalLong,
    NormalShort,
    NormalMedium,
    NormalExtraLong,
    NormalLongBottom,
    NormalTwoPeaks,
    PartingLong,
    FrontLock,
    PartingShort,
    PartingExtraLongCurved,
    PartingExtraLong,
    PartingMiddleLong,
    PartingSquared,
    PartingLongBottom,
    PeaksTop,
    PeaksSquared,
    PartingPeaks,
    PeaksLongBottom,
    Peaks,
    PeaksRounded,
    PeaksSide,
    PeaksMedium,
    PeaksLong,
    PeaksRoundedLong,
    PartingFrontPeaks,
    PartingLongFront,
    PartingLongRounded,
    PartingFrontPeaksLong,
    PartingExtraLongRounded,
    LongRounded,
    Normal1,
    Normal2,
    Normal3,
    Normal4,
    Normal5,
    Normal6,
    DreadLocks,
    PlatedMats,
    Caps,
    Afro,
    PlatedMatsLong,
    Beanie,
    Short,
    ShortTopLongSide,
    ShortUnknown1,
    ShortUnknown2,
    MilitaryParting,
    Military,
    Short3,
    Short4,
    Short5,
    Short6,
    NoneTop,
    None,
    Long1,
    Long2,
    Long3,
    Long4,
    Long5,
    Long6,
    Long7,
    Long8,
    Long9,
    Long10,
    Long11,
    Long12,
    Long13,
    Long14,
    Long15,
    Long16,
    Long17,
    Long18,
    Long19,
    Long20,
    Long21,
    Long22,
    Long23,
    Long24,
    Long25,
    Long26,
    Long27,
    Long28,
    Long29,
    Long30,
    Long31,
    Long32,
    Long33,
    Long34,
    Long35,
    Long36,
    Long37,
    Long38,
    Long39,
    Long40,
    Long41,
    Long42,
    Long43,
    Long44,
    Long45,
    Long46,
    Long47,
    Long48,
    Long49,
    Long50,
    Long51,
    Long52,
    Long53,
    Long54,
    Long55,
    Long56,
    Long57,
    Long58,
    Long59,
    Long60,
    Long61,
    Long62,
    Long63,
    Long64,
    Long65,
    Long66,
    TwoMediumFrontStrandsOneLongBackPonyTail,
    TwoFrontStrandsLongBackPonyTail,
    PartingFrontTwoLongBackPonyTails,
    TwoFrontStrandsOneLongBackPonyTail,
    LongBackPonyTail,
    LongFrontTwoLongBackPonyTails,
    StrandsTwoShortSidedPonyTails,
    TwoMediumSidedPonyTails,
    ShortFrontTwoBackPonyTails,
    TwoShortSidedPonyTails,
    TwoLongSidedPonyTails,
    LongFrontTwoBackPonyTails,
};

enum class MoleType : u32 {
    None,
    OneDot,
};

enum class MouthType : u32 {
    Neutral,
    NeutralLips,
    Smile,
    SmileStroke,
    SmileTeeth,
    LipsSmall,
    LipsLarge,
    Wave,
    WaveAngrySmall,
    NeutralStrokeLarge,
    TeethSurprised,
    LipsExtraLarge,
    LipsUp,
    NeutralDown,
    Surprised,
    TeethMiddle,
    NeutralStroke,
    LipsExtraSmall,
    Malicious,
    LipsDual,
    NeutralComma,
    NeutralUp,
    TeethLarge,
    WaveAngry,
    LipsSexy,
    SmileInverted,
    LipsSexyOutline,
    SmileRounded,
    LipsTeeth,
    NeutralOpen,
    TeethRounded,
    WaveAngrySmallInverted,
    NeutralCommaInverted,
    TeethFull,
    SmileDownLine,
    Kiss,
};

enum class MustacheType : u32 {
    None,
    Walrus,
    Pencil,
    Horseshoe,
    Normal,
    Toothbrush,
};

enum class NoseType : u32 {
    Normal,
    Rounded,
    Dot,
    Arrow,
    Roman,
    Triangle,
    Button,
    RoundedInverted,
    Potato,
    Grecian,
    Snub,
    Aquiline,
    ArrowLeft,
    RoundedLarge,
    Hooked,
    Fat,
    Droopy,
    ArrowLarge,
};

enum class Race : u32 {
    Black,
    White,
    Asian,
    All,
};

} // namespace Service::Mii
